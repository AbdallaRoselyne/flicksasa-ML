{"filter":false,"title":"user.py","tooltip":"/user.py","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":0,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["import pandas as pd","import random","import boto3","from io import StringIO","","# Define possible values for each preference","moods = [\"happy\", \"sad\", \"excited\", \"relaxed\"]","types = [\"movie\", \"series\", \"miniseries\"]","genres = [\"Action\", \"Comedy\", \"Drama\", \"Horror\", \"Romance\", \"Sci-Fi\", \"Thriller\", \"Fantasy\", \"Documentary\", \"Adventure\", \"Mystery\", \"Reality-TV\"]","ages = range(15, 80)","","# Number of simulated users","num_users = 100","","# Function to generate a user profile","def generate_user_profile(user_id):","    profile = {","        \"user_id\": user_id,","        \"mood\": random.choice(moods),","        \"type\": random.choice(types),","        \"preferred_genres\": random.sample(genres, k=random.randint(1, 3)),","        \"age\": random.choice(ages)","    }","    return profile","","# Generate random user profiles","user_profiles = [generate_user_profile(user_id) for user_id in range(1, num_users + 1)]","","# Convert to DataFrame","user_profiles_df = pd.DataFrame(user_profiles)","","# Save user profiles to CSV","csv_buffer = StringIO()","user_profiles_df.to_csv(csv_buffer, index=False)","","# Upload to S3","s3 = boto3.client('s3')","s3_bucket_name = 'your-s3-bucket-name'","s3_file_path = 'imdb/simulated_user_profiles.csv'","","s3.put_object(Bucket=s3_bucket_name, Key=s3_file_path, Body=csv_buffer.getvalue())","","print(\"User profiles have been saved to S3 bucket.\")",""],"id":15}],[{"start":{"row":37,"column":18},"end":{"row":37,"column":37},"action":"remove","lines":["your-s3-bucket-name"],"id":16},{"start":{"row":37,"column":18},"end":{"row":37,"column":19},"action":"insert","lines":["m"]},{"start":{"row":37,"column":19},"end":{"row":37,"column":20},"action":"insert","lines":["y"]},{"start":{"row":37,"column":20},"end":{"row":37,"column":21},"action":"insert","lines":["f"]},{"start":{"row":37,"column":21},"end":{"row":37,"column":22},"action":"insert","lines":["l"]}],[{"start":{"row":37,"column":22},"end":{"row":37,"column":23},"action":"insert","lines":["i"],"id":17},{"start":{"row":37,"column":23},"end":{"row":37,"column":24},"action":"insert","lines":["c"]},{"start":{"row":37,"column":24},"end":{"row":37,"column":25},"action":"insert","lines":["k"]},{"start":{"row":37,"column":25},"end":{"row":37,"column":26},"action":"insert","lines":["s"]},{"start":{"row":37,"column":26},"end":{"row":37,"column":27},"action":"insert","lines":["a"]},{"start":{"row":37,"column":27},"end":{"row":37,"column":28},"action":"insert","lines":["s"]},{"start":{"row":37,"column":28},"end":{"row":37,"column":29},"action":"insert","lines":["a"]}],[{"start":{"row":37,"column":18},"end":{"row":37,"column":29},"action":"remove","lines":["myflicksasa"],"id":18},{"start":{"row":37,"column":18},"end":{"row":37,"column":29},"action":"insert","lines":["myflicksasa"]}],[{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"remove","lines":["1"],"id":19}],[{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["2"],"id":20}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"remove","lines":[","],"id":21}],[{"start":{"row":7,"column":26},"end":{"row":7,"column":39},"action":"remove","lines":[" \"miniseries\""],"id":22}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":12,"column":15},"end":{"row":12,"column":15},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1721398886366,"hash":"17f6f200cf0b0f1385a32be52c4d17c2d006f4ae"}